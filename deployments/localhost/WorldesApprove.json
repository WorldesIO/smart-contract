{
  "address": "0x9A676e781A523b5d0C0e43731313A708CB607508",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferPrepared",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldProxy",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newProxy",
          "type": "address"
        }
      ],
      "name": "SetWorldesProxy",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "_NEW_OWNER_",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_OWNER_",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_PENDING_WORLDES_PROXY_",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_TIMELOCK_",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_WORLDES_PROXY_",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dest",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "claimTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getWorldesProxy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "initProxyAddress",
          "type": "address"
        }
      ],
      "name": "init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "initOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockSetProxy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setWorldesProxy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newSwapProxy",
          "type": "address"
        }
      ],
      "name": "unlockSetProxy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xec449e376ba7e4452e2f97a4cfd2094ccd302aaf4cf1504797d828b287bd13a5",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x9A676e781A523b5d0C0e43731313A708CB607508",
    "transactionIndex": 0,
    "gasUsed": "560375",
    "logsBloom": "0x
    "blockHash": "0xe40296c5c2804c4baa2a846bd0adc33ca7e26800c2921fc3c7e24ebd3e435048",
    "transactionHash": "0xec449e376ba7e4452e2f97a4cfd2094ccd302aaf4cf1504797d828b287bd13a5",
    "logs": [],
    "blockNumber": 15,
    "cumulativeGasUsed": "560375",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "2bc52c20de8a37fa339f3a7b69b4b897",
  "metadata": "{\"compiler\":{\"version\":\"0.6.9+commit.3e3065ac\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferPrepared\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldProxy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newProxy\",\"type\":\"address\"}],\"name\":\"SetWorldesProxy\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_NEW_OWNER_\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_OWNER_\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_PENDING_WORLDES_PROXY_\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_TIMELOCK_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_WORLDES_PROXY_\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dest\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"claimTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWorldesProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initProxyAddress\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"initOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockSetProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setWorldesProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newSwapProxy\",\"type\":\"address\"}],\"name\":\"unlockSetProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{},\"title\":\"WorldesApprove\"},\"userdoc\":{\"methods\":{},\"notice\":\"Handle authorizations in Worldes platform\"}},\"settings\":{\"compilationTarget\":{\"contracts/proxy/WorldesApprove.sol\":\"WorldesApprove\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"content\":\"// This is a file copied from https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\\r\\n// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.6.9;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\n/**\\r\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\r\\n */\\r\\ninterface IERC20 {\\r\\n    /**\\r\\n     * @dev Returns the amount of tokens in existence.\\r\\n     */\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function decimals() external view returns (uint8);\\r\\n\\r\\n    function name() external view returns (string memory);\\r\\n\\r\\n    function symbol() external view returns (string memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the amount of tokens owned by `account`.\\r\\n     */\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remaining number of tokens that `spender` will be\\r\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\r\\n     * zero by default.\\r\\n     *\\r\\n     * This value changes when {approve} or {transferFrom} are called.\\r\\n     */\\r\\n    function allowance(address owner, address spender) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\r\\n     * that someone may use both the old and the new allowance by unfortunate\\r\\n     * transaction ordering. One possible solution to mitigate this race\\r\\n     * condition is to first reduce the spender's allowance to 0 and set the\\r\\n     * desired value afterwards:\\r\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n     *\\r\\n     * Emits an {Approval} event.\\r\\n     */\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\r\\n     * allowance mechanism. `amount` is then deducted from the caller's\\r\\n     * allowance.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function transferFrom(\\r\\n        address sender,\\r\\n        address recipient,\\r\\n        uint256 amount\\r\\n    ) external returns (bool);\\r\\n}\",\"keccak256\":\"0xc3b1b297d3eb14bbe1767f9d36a68592d7a80ad01b7596e95aa542a0d1d662a2\",\"license\":\"MIT\"},\"contracts/libraries/InitializableOwnable.sol\":{\"content\":\"/*\\r\\n \\r\\n    SPDX-License-Identifier: Apache-2.0\\r\\n\\r\\n*/\\r\\n\\r\\npragma solidity 0.6.9;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\n/**\\r\\n * @title Ownable\\r\\n  *\\r\\n * @notice Ownership related functions\\r\\n */\\r\\ncontract InitializableOwnable {\\r\\n    address public _OWNER_;\\r\\n    address public _NEW_OWNER_;\\r\\n    bool internal _INITIALIZED_;\\r\\n\\r\\n    // ============ Events ============\\r\\n\\r\\n    event OwnershipTransferPrepared(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n    // ============ Modifiers ============\\r\\n\\r\\n    modifier notInitialized() {\\r\\n        require(!_INITIALIZED_, \\\"_INITIALIZED\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(msg.sender == _OWNER_, \\\"NOT_OWNER\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    // ============ Functions ============\\r\\n\\r\\n    function initOwner(address newOwner) public notInitialized {\\r\\n        _INITIALIZED_ = true;\\r\\n        _OWNER_ = newOwner;\\r\\n    }\\r\\n\\r\\n    function transferOwnership(address newOwner) public onlyOwner {\\r\\n        emit OwnershipTransferPrepared(_OWNER_, newOwner);\\r\\n        _NEW_OWNER_ = newOwner;\\r\\n    }\\r\\n\\r\\n    function claimOwnership() public {\\r\\n        require(msg.sender == _NEW_OWNER_, \\\"INVALID_CLAIM\\\");\\r\\n        emit OwnershipTransferred(_OWNER_, _NEW_OWNER_);\\r\\n        _OWNER_ = _NEW_OWNER_;\\r\\n        _NEW_OWNER_ = address(0);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xfe6ac3ca14bc72355847e9a53052d5007d24155214135116feefabcc135a57e0\",\"license\":\"Apache-2.0\"},\"contracts/libraries/SafeERC20.sol\":{\"content\":\"/*\\r\\n \\r\\n    SPDX-License-Identifier: Apache-2.0\\r\\n    This is a simplified version of OpenZepplin's SafeERC20 library\\r\\n\\r\\n*/\\r\\n\\r\\npragma solidity 0.6.9;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\nimport {IERC20} from \\\"../interfaces/IERC20.sol\\\";\\r\\nimport {SafeMath} from \\\"./SafeMath.sol\\\";\\r\\n\\r\\n\\r\\n/**\\r\\n * @title SafeERC20\\r\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\r\\n * contract returns false). Tokens that return no value (and instead revert or\\r\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\r\\n * successful.\\r\\n * To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract,\\r\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\r\\n */\\r\\nlibrary SafeERC20 {\\r\\n    using SafeMath for uint256;\\r\\n\\r\\n    function safeTransfer(\\r\\n        IERC20 token,\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) internal {\\r\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\r\\n    }\\r\\n\\r\\n    function safeTransferFrom(\\r\\n        IERC20 token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) internal {\\r\\n        _callOptionalReturn(\\r\\n            token,\\r\\n            abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function safeApprove(\\r\\n        IERC20 token,\\r\\n        address spender,\\r\\n        uint256 value\\r\\n    ) internal {\\r\\n        // safeApprove should only be called when setting an initial allowance,\\r\\n        // or when resetting it to zero. To increase and decrease it, use\\r\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\r\\n        // solhint-disable-next-line max-line-length\\r\\n        require(\\r\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\r\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\r\\n        );\\r\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\r\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\r\\n     * @param token The token targeted by the call.\\r\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\r\\n     */\\r\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\r\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\r\\n        // we're implementing it ourselves.\\r\\n\\r\\n        // A Solidity high level call has three parts:\\r\\n        //  1. The target address is checked to verify it contains contract code\\r\\n        //  2. The call itself is made, and success asserted\\r\\n        //  3. The return value is decoded, which in turn checks the size of the returned data.\\r\\n        // solhint-disable-next-line max-line-length\\r\\n\\r\\n        // solhint-disable-next-line avoid-low-level-calls\\r\\n        (bool success, bytes memory returndata) = address(token).call(data);\\r\\n        require(success, \\\"SafeERC20: low-level call failed\\\");\\r\\n\\r\\n        if (returndata.length > 0) {\\r\\n            // Return data is optional\\r\\n            // solhint-disable-next-line max-line-length\\r\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x73bdda5b177b6f1cb93396fa135a99a99b317ec8475b6d5f13f4696b0685af9c\",\"license\":\"Apache-2.0\"},\"contracts/libraries/SafeMath.sol\":{\"content\":\"/*\\r\\n \\r\\n    SPDX-License-Identifier: Apache-2.0\\r\\n\\r\\n*/\\r\\n\\r\\npragma solidity 0.6.9;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\n\\r\\n/**\\r\\n * @title SafeMath\\r\\n *\\r\\n * @notice Math operations with safety checks that revert on error\\r\\n */\\r\\nlibrary SafeMath {\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        if (a == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"MUL_ERROR\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        require(b > 0, \\\"DIVIDING_ERROR\\\");\\r\\n        return a / b;\\r\\n    }\\r\\n\\r\\n    function divCeil(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 quotient = div(a, b);\\r\\n        uint256 remainder = a - quotient * b;\\r\\n        if (remainder > 0) {\\r\\n            return quotient + 1;\\r\\n        } else {\\r\\n            return quotient;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        require(b <= a, \\\"SUB_ERROR\\\");\\r\\n        return a - b;\\r\\n    }\\r\\n\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c >= a, \\\"ADD_ERROR\\\");\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function sqrt(uint256 x) internal pure returns (uint256 y) {\\r\\n        uint256 z = x / 2 + 1;\\r\\n        y = x;\\r\\n        while (z < y) {\\r\\n            y = z;\\r\\n            z = (x / z + z) / 2;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x4e15e5debcd4097573f1e017fb458502a0122b8d543d140d8f708d4db35590c8\",\"license\":\"Apache-2.0\"},\"contracts/proxy/WorldesApprove.sol\":{\"content\":\"/*\\r\\n \\r\\n    SPDX-License-Identifier: Apache-2.0\\r\\n\\r\\n*/\\r\\n\\r\\npragma solidity 0.6.9;\\r\\n\\r\\nimport {IERC20} from \\\"../interfaces/IERC20.sol\\\";\\r\\nimport {SafeERC20} from \\\"../libraries/SafeERC20.sol\\\";\\r\\nimport {InitializableOwnable} from \\\"../libraries/InitializableOwnable.sol\\\";\\r\\n\\r\\n\\r\\n/**\\r\\n * @title WorldesApprove\\r\\n  *\\r\\n * @notice Handle authorizations in Worldes platform\\r\\n */\\r\\ncontract WorldesApprove is InitializableOwnable {\\r\\n    using SafeERC20 for IERC20;\\r\\n    \\r\\n    // ============ Storage ============\\r\\n    uint256 private constant _TIMELOCK_DURATION_ = 3 days;\\r\\n    uint256 private constant _TIMELOCK_EMERGENCY_DURATION_ = 24 hours;\\r\\n    uint256 public _TIMELOCK_;\\r\\n    address public _PENDING_WORLDES_PROXY_;\\r\\n    address public _WORLDES_PROXY_;\\r\\n\\r\\n    // ============ Events ============\\r\\n\\r\\n    event SetWorldesProxy(address indexed oldProxy, address indexed newProxy);\\r\\n\\r\\n    \\r\\n    // ============ Modifiers ============\\r\\n    modifier notLocked() {\\r\\n        require(\\r\\n            _TIMELOCK_ <= block.timestamp,\\r\\n            \\\"SetProxy is timelocked\\\"\\r\\n        );\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function init(address owner, address initProxyAddress) external {\\r\\n        initOwner(owner);\\r\\n        _WORLDES_PROXY_ = initProxyAddress;\\r\\n    }\\r\\n\\r\\n    function unlockSetProxy(address newSwapProxy) public onlyOwner {\\r\\n        if(_WORLDES_PROXY_ == address(0))\\r\\n            _TIMELOCK_ = block.timestamp + _TIMELOCK_EMERGENCY_DURATION_;\\r\\n        else\\r\\n            _TIMELOCK_ = block.timestamp + _TIMELOCK_DURATION_;\\r\\n        _PENDING_WORLDES_PROXY_ = newSwapProxy;\\r\\n    }\\r\\n\\r\\n\\r\\n    function lockSetProxy() public onlyOwner {\\r\\n       _PENDING_WORLDES_PROXY_ = address(0);\\r\\n       _TIMELOCK_ = 0;\\r\\n    }\\r\\n\\r\\n\\r\\n    function setWorldesProxy() external onlyOwner notLocked() {\\r\\n        emit SetWorldesProxy(_WORLDES_PROXY_, _PENDING_WORLDES_PROXY_);\\r\\n        _WORLDES_PROXY_ = _PENDING_WORLDES_PROXY_;\\r\\n        lockSetProxy();\\r\\n    }\\r\\n\\r\\n\\r\\n    function claimTokens(\\r\\n        address token,\\r\\n        address who,\\r\\n        address dest,\\r\\n        uint256 amount\\r\\n    ) external {\\r\\n        require(msg.sender == _WORLDES_PROXY_, \\\"WorldesApprove:Access restricted\\\");\\r\\n        if (amount > 0) {\\r\\n            IERC20(token).safeTransferFrom(who, dest, amount);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getWorldesProxy() public view returns (address) {\\r\\n        return _WORLDES_PROXY_;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x67bf37cea5f56cabe250d60f98ed8df69ac7956edaee5f6746549ab3472f346b\",\"license\":\"Apache-2.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061092a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80634e71e0c81161008c578063b75dbf6811610066578063b75dbf68146101cd578063f09a4016146101e7578063f2fde38b14610215578063fccec6401461023b576100ea565b80634e71e0c8146101b55780634f3cef84146101bd5780638456db15146101c5576100ea565b806316048bc4116100c857806316048bc4146101775780631cbc6b151461017f57806341c256c1146101875780634da42b50146101ad576100ea565b80630a5ea466146100ef5780630d0092971461012d57806312c0de6314610153575b600080fd5b61012b6004803603608081101561010557600080fd5b506001600160a01b03813581169160208101358216916040820135169060600135610243565b005b61012b6004803603602081101561014357600080fd5b50356001600160a01b03166102c9565b61015b61034d565b604080516001600160a01b039092168252519081900360200190f35b61015b61035c565b61012b61036b565b61012b6004803603602081101561019d57600080fd5b50356001600160a01b0316610471565b61015b610506565b61012b610515565b61012b6105c8565b61015b61062a565b6101d5610639565b60408051918252519081900360200190f35b61012b600480360360408110156101fd57600080fd5b506001600160a01b038135811691602001351661063f565b61012b6004803603602081101561022b57600080fd5b50356001600160a01b031661066b565b61015b610711565b6004546001600160a01b031633146102a2576040805162461bcd60e51b815260206004820181905260248201527f576f726c646573417070726f76653a4163636573732072657374726963746564604482015290519081900360640190fd5b80156102c3576102c36001600160a01b03851684848463ffffffff61072016565b50505050565b600154600160a01b900460ff1615610317576040805162461bcd60e51b815260206004820152600c60248201526b17d25392551250531256915160a21b604482015290519081900360640190fd5b6001805460ff60a01b1916600160a01b179055600080546001600160a01b039092166001600160a01b0319909216919091179055565b6003546001600160a01b031681565b6000546001600160a01b031681565b6000546001600160a01b031633146103b6576040805162461bcd60e51b81526020600482015260096024820152682727aa2fa7aba722a960b91b604482015290519081900360640190fd5b426002541115610406576040805162461bcd60e51b815260206004820152601660248201527514d95d141c9bde1e481a5cc81d1a5b595b1bd8dad95960521b604482015290519081900360640190fd5b6003546004546040516001600160a01b0392831692909116907fd48934879a3f064e47357b1b7751ee296e085fa4c659b742837bc8138b2e704090600090a3600354600480546001600160a01b0319166001600160a01b0390921691909117905561046f6105c8565b565b6000546001600160a01b031633146104bc576040805162461bcd60e51b81526020600482015260096024820152682727aa2fa7aba722a960b91b604482015290519081900360640190fd5b6004546001600160a01b03166104da574262015180016002556104e4565b426203f480016002555b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6004546001600160a01b031681565b6001546001600160a01b03163314610564576040805162461bcd60e51b815260206004820152600d60248201526c494e56414c49445f434c41494d60981b604482015290519081900360640190fd5b600154600080546040516001600160a01b0393841693909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a360018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b6000546001600160a01b03163314610613576040805162461bcd60e51b81526020600482015260096024820152682727aa2fa7aba722a960b91b604482015290519081900360640190fd5b600380546001600160a01b03191690556000600255565b6001546001600160a01b031681565b60025481565b610648826102c9565b600480546001600160a01b0319166001600160a01b039290921691909117905550565b6000546001600160a01b031633146106b6576040805162461bcd60e51b81526020600482015260096024820152682727aa2fa7aba722a960b91b604482015290519081900360640190fd5b600080546040516001600160a01b03808516939216917fdcf55418cee3220104fef63f979ff3c4097ad240c0c43dcb33ce837748983e6291a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b6004546001600160a01b031690565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526102c390859060006060836001600160a01b0316836040518082805190602001908083835b602083106107b35780518252601f199092019160209182019101610794565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610815576040519150601f19603f3d011682016040523d82523d6000602084013e61081a565b606091505b509150915081610871576040805162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b8051156102c35780806020019051602081101561088d57600080fd5b50516102c35760405162461bcd60e51b815260040180806020018281038252602a8152602001806108cb602a913960400191505060405180910390fdfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a26469706673582212200ce2832ce75aa90cc077cdbd04f96eba72b25d80bcba17a6cf72da3b5b852bfc64736f6c63430006090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c80634e71e0c81161008c578063b75dbf6811610066578063b75dbf68146101cd578063f09a4016146101e7578063f2fde38b14610215578063fccec6401461023b576100ea565b80634e71e0c8146101b55780634f3cef84146101bd5780638456db15146101c5576100ea565b806316048bc4116100c857806316048bc4146101775780631cbc6b151461017f57806341c256c1146101875780634da42b50146101ad576100ea565b80630a5ea466146100ef5780630d0092971461012d57806312c0de6314610153575b600080fd5b61012b6004803603608081101561010557600080fd5b506001600160a01b03813581169160208101358216916040820135169060600135610243565b005b61012b6004803603602081101561014357600080fd5b50356001600160a01b03166102c9565b61015b61034d565b604080516001600160a01b039092168252519081900360200190f35b61015b61035c565b61012b61036b565b61012b6004803603602081101561019d57600080fd5b50356001600160a01b0316610471565b61015b610506565b61012b610515565b61012b6105c8565b61015b61062a565b6101d5610639565b60408051918252519081900360200190f35b61012b600480360360408110156101fd57600080fd5b506001600160a01b038135811691602001351661063f565b61012b6004803603602081101561022b57600080fd5b50356001600160a01b031661066b565b61015b610711565b6004546001600160a01b031633146102a2576040805162461bcd60e51b815260206004820181905260248201527f576f726c646573417070726f76653a4163636573732072657374726963746564604482015290519081900360640190fd5b80156102c3576102c36001600160a01b03851684848463ffffffff61072016565b50505050565b600154600160a01b900460ff1615610317576040805162461bcd60e51b815260206004820152600c60248201526b17d25392551250531256915160a21b604482015290519081900360640190fd5b6001805460ff60a01b1916600160a01b179055600080546001600160a01b039092166001600160a01b0319909216919091179055565b6003546001600160a01b031681565b6000546001600160a01b031681565b6000546001600160a01b031633146103b6576040805162461bcd60e51b81526020600482015260096024820152682727aa2fa7aba722a960b91b604482015290519081900360640190fd5b426002541115610406576040805162461bcd60e51b815260206004820152601660248201527514d95d141c9bde1e481a5cc81d1a5b595b1bd8dad95960521b604482015290519081900360640190fd5b6003546004546040516001600160a01b0392831692909116907fd48934879a3f064e47357b1b7751ee296e085fa4c659b742837bc8138b2e704090600090a3600354600480546001600160a01b0319166001600160a01b0390921691909117905561046f6105c8565b565b6000546001600160a01b031633146104bc576040805162461bcd60e51b81526020600482015260096024820152682727aa2fa7aba722a960b91b604482015290519081900360640190fd5b6004546001600160a01b03166104da574262015180016002556104e4565b426203f480016002555b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6004546001600160a01b031681565b6001546001600160a01b03163314610564576040805162461bcd60e51b815260206004820152600d60248201526c494e56414c49445f434c41494d60981b604482015290519081900360640190fd5b600154600080546040516001600160a01b0393841693909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a360018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b6000546001600160a01b03163314610613576040805162461bcd60e51b81526020600482015260096024820152682727aa2fa7aba722a960b91b604482015290519081900360640190fd5b600380546001600160a01b03191690556000600255565b6001546001600160a01b031681565b60025481565b610648826102c9565b600480546001600160a01b0319166001600160a01b039290921691909117905550565b6000546001600160a01b031633146106b6576040805162461bcd60e51b81526020600482015260096024820152682727aa2fa7aba722a960b91b604482015290519081900360640190fd5b600080546040516001600160a01b03808516939216917fdcf55418cee3220104fef63f979ff3c4097ad240c0c43dcb33ce837748983e6291a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b6004546001600160a01b031690565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526102c390859060006060836001600160a01b0316836040518082805190602001908083835b602083106107b35780518252601f199092019160209182019101610794565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610815576040519150601f19603f3d011682016040523d82523d6000602084013e61081a565b606091505b509150915081610871576040805162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b8051156102c35780806020019051602081101561088d57600080fd5b50516102c35760405162461bcd60e51b815260040180806020018281038252602a8152602001806108cb602a913960400191505060405180910390fdfe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a26469706673582212200ce2832ce75aa90cc077cdbd04f96eba72b25d80bcba17a6cf72da3b5b852bfc64736f6c63430006090033",
  "devdoc": {
    "methods": {},
    "title": "WorldesApprove"
  },
  "userdoc": {
    "methods": {},
    "notice": "Handle authorizations in Worldes platform"
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2160,
        "contract": "contracts/proxy/WorldesApprove.sol:WorldesApprove",
        "label": "_OWNER_",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 2162,
        "contract": "contracts/proxy/WorldesApprove.sol:WorldesApprove",
        "label": "_NEW_OWNER_",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 2164,
        "contract": "contracts/proxy/WorldesApprove.sol:WorldesApprove",
        "label": "_INITIALIZED_",
        "offset": 20,
        "slot": "1",
        "type": "t_bool"
      },
      {
        "astId": 3903,
        "contract": "contracts/proxy/WorldesApprove.sol:WorldesApprove",
        "label": "_TIMELOCK_",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 3905,
        "contract": "contracts/proxy/WorldesApprove.sol:WorldesApprove",
        "label": "_PENDING_WORLDES_PROXY_",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 3907,
        "contract": "contracts/proxy/WorldesApprove.sol:WorldesApprove",
        "label": "_WORLDES_PROXY_",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}